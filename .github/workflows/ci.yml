name: CI

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
      
    - name: Build and test with Maven
      run: mvn -B package --file pom.xml
    
    - name: Build Docker image
      run: |
        docker build -t musicfinder .
        docker run -d -p 8080:8080 musicfinder &
        sleep 10
    
    - name: Check that the containerized app is accessible on port 8080
      run: |
        curl --fail http://localhost:8080 || exit 1

    - name: Test /artist/{name} endpoint
      run: |
        response=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080/artist/Nirvana)
        if [ "$response" -ne 200 ]; then
          echo "API test failed with status code $response"
          exit 1
        fi

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JackLennox_Assign2SoftwareDupe
